openapi: "3.0.0"
info:
  version: 1.0.0
  title: Star Wars Resources API
servers:
  - url: http://localhost:1337/api

tags:
  - name: films
    description: API endpoints related to films resources
  - name: vehicles
    description: API endpoints related to vehicles resources
  - name: planets
    description: API endpoints related to planets resources
  - name: species
    description: API endpoints related to species resources
  - name: starships
    description: API endpoints related to starships resources

paths:
  /films:
    get: 
      summary: Get list of films
      tags:
        - films
      parameters:
        - $ref: '#components/schemas/Page'
        - $ref: '#components/schemas/Limit'
        - $ref: '#components/schemas/Filter'
        - $ref: '#components/schemas/Sort'
      responses:
        '200':
          description: List of paginated films 
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/Pagination"
                - type: object
                  properties:
                    data: 
                      type: array
                      items:
                        $ref: "#/components/schemas/Film"
 
  /films/{id}:
    get: 
      summary: Get film details
      tags:
        - films
      parameters:
      - $ref: '#components/schemas/id'
      responses:
        '200':
          description: Film details
          content:
            application/json:
              schema:
                type: object
                properties:
                  film:
                    $ref: "#/components/schemas/Film"
        '404':
          description: Film not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404" 

  /films/words:
    get: 
      summary: Get words count and most mentioned character from opening crawls
      tags:
        - films
      responses:
        '200':
          description: Words count and most mentioned character from opening crawls
          content:
            application/json:
              schema:
                type: object
                properties:
                  uniqueWords:
                    type: object
                    properties:
                      it:
                        type: number
                        example: 13
                      the:
                        type: number
                        example: 10
                      rey:
                        type: number
                        example: 2
                      planet:
                        type: number
                        example: 1
                  mostMentioned:
                    oneOf:
                      - type: string
                        example: Rey
                      - type: array
                        items:
                          type: string
                        example: ["Rey", "Luke", "Anakin"]

  /planets:
    get: 
      summary: Get list of planets
      tags:
        - planets
      parameters:
        - $ref: '#components/schemas/Page'
        - $ref: '#components/schemas/Limit'
        - $ref: '#components/schemas/Filter'
        - $ref: '#components/schemas/Sort'
      responses:
        '200':
          description: List of paginated planets 
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/Pagination"
                - type: object
                  properties:
                    data: 
                      type: array
                      items:
                        $ref: "#/components/schemas/Planet"

  /planets/planet:
    post: 
      summary: Post custom planet
      tags:
        - planets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanetBody"
      responses:
        '201':
          description: New planet added to DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Planet"

  /planets/{id}:
    get:
      summary: Get planet details
      tags:
        - planets
      parameters:
      - $ref: '#components/schemas/id'
      responses:
        '200':
          description: Planet details
          content:
            application/json:
              schema:
                type: object
                properties:
                  planet:
                    $ref: "#/components/schemas/Planet"
        '404':
          description: Planet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"

    patch:
      summary: Update planet
      tags:
        - planets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanetBody"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Id of a planet
      responses:
        '200':
          description: Planet updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Planet"

  /starships:
    get: 
      summary: Get list of starships
      tags:
        - starships
      parameters:
        - $ref: '#components/schemas/Page'
        - $ref: '#components/schemas/Limit'
        - $ref: '#components/schemas/Filter'
        - $ref: '#components/schemas/Sort'
      responses:
        '200':
          description: List of paginated starships 
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/Pagination"
                - type: object
                  properties:
                    data: 
                      type: array
                      items:
                        $ref: "#/components/schemas/Starship" 

  /starships/{id}:
    get:
      summary: Get starship details
      tags:
        - starships
      parameters:
      - $ref: '#components/schemas/id'
      responses:
        '200':
          description: Starship details
          content:
            application/json:
              schema:
                type: object
                properties:
                  starship:
                    $ref: "#/components/schemas/Starship"
        '404':
          description: Starship not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404" 

  /vehicles:
    get: 
      summary: Get list of vehicles
      tags:
        - vehicles
      parameters:
        - $ref: '#components/schemas/Page'
        - $ref: '#components/schemas/Limit'
        - $ref: '#components/schemas/Filter'
        - $ref: '#components/schemas/Sort'
      responses:
        '200':
          description: List of paginated vehicles 
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/Pagination"
                - type: object
                  properties:
                    data: 
                      type: array
                      items:
                        $ref: "#/components/schemas/Vehicle"

  /vehicles/{id}:
    get:
      summary: Get vehicle details
      tags:
        - vehicles
      parameters:
      - $ref: '#components/schemas/id'
      responses:
        '200':
          description: Vehicle details
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicle:
                    $ref: "#/components/schemas/Vehicle"
        '404':
          description: Vehicle not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"    

  /species:
    get: 
      summary: Get list of species
      tags:
        - species
      parameters:
        - $ref: '#components/schemas/Page'
        - $ref: '#components/schemas/Limit'
        - $ref: '#components/schemas/Filter'
        - $ref: '#components/schemas/Sort'
      responses:
        '200':
          description: List of paginated species 
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/Pagination"
                - type: object
                  properties:
                    data: 
                      type: array
                      items:
                        $ref: "#/components/schemas/Species"

  /species/{id}:
    get:
      summary: Get species details
      tags:
        - species
      parameters:
      - $ref: '#components/schemas/id'
      responses:
        '200':
          description: Species details
          content:
            application/json:
              schema:
                type: object
                properties:
                  species:
                    $ref: "#/components/schemas/Species"    
        '404':
          description: Species not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error404"            

components:
  schemas:
    Pagination:
      $ref: 'schemas/pagination.yaml'
    ErrorDefault:
      $ref: 'schemas/error-default.yaml'
    Error404:
      $ref: 'schemas/error-404.yaml'
    Film:
      $ref: 'responses/film.yaml'
    Planet:
      $ref: 'responses/planet.yaml'
    Species:
      $ref: 'responses/species.yaml'
    Vehicle:
      $ref: 'responses/vehicle.yaml'
    Starship:
      $ref: 'responses/starship.yaml'
    id: 
      $ref: 'parameters/id.yaml'
    Page:
      $ref: 'parameters/page.yaml'
    Limit:
      $ref: 'parameters/limit.yaml'
    Filter:
      $ref: 'parameters/filter.yaml'
    Relations:
      $ref: 'parameters/relations.yaml'
    Sort:
      $ref: 'parameters/sort.yaml'
    Variant:
      $ref: 'parameters/variant.yaml'
    PlanetBody:
      $ref: 'requestBodies/planet.yaml'

